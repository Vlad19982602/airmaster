generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
}

model Client {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  email     String    @unique
  password  String
  createdAt DateTime  @default(now()) @map("created_at")
  phone     String
  projects  Project[]
}

model Project {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  clientId    Int         @map("client_id")
  client      Client      @relation(fields: [clientId], references: [id])
  materials   Material[]
  equipment   Equipment[]
  workTimes   WorkTime[]
  reports     Report[]
}

model Material {
  id        Int     @id @default(autoincrement())
  name      String
  quantity  Float
  projectId Int     @map("project_id")
  project   Project @relation(fields: [projectId], references: [id])
}

model Equipment {
  id        Int     @id @default(autoincrement())
  name      String
  quantity  Float
  projectId Int     @map("project_id")
  project   Project @relation(fields: [projectId], references: [id])
}

model Employee {
  id        Int        @id @default(autoincrement())
  firstName String     @map("first_name")
  lastName  String     @map("last_name")
  email     String     @unique
  phone     String
  workTimes WorkTime[]
}

model Contractor {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  phone     String
  workTimes WorkTime[]
}

model WorkTime {
  id           Int         @id @default(autoincrement())
  date         DateTime
  hours        Float
  projectId    Int         @map("project_id")
  project      Project     @relation(fields: [projectId], references: [id])
  employeeId   Int?        @map("employee_id")
  employee     Employee?   @relation(fields: [employeeId], references: [id])
  contractorId Int?        @map("contractor_id")
  contractor   Contractor? @relation(fields: [contractorId], references: [id])
}

model Report {
  id           Int      @id @default(autoincrement())
  date         DateTime
  description  String
  projectId    Int      @map("project_id")
  project      Project  @relation(fields: [projectId], references: [id])
  materialCost Float    @map("material_cost")
  laborCost    Float    @map("labor_cost")
  totalCost    Float    @map("total_cost")
}

model Calculation {
  id        Int    @id @default(autoincrement())
  question1 String
  question2 String
  question3 String
  question4 String
  question5 String
}

model FinancialEntry {
  id        Int      @id @default(autoincrement())
  date      DateTime
  amount    Float
  createdAt DateTime @default(now()) @map("created_at")
}
